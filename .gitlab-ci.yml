# SPDX-FileCopyrightText: 2019-2020 Magenta ApS
# SPDX-License-Identifier: MPL-2.0

stages:
  - sync
  - lint
  - build

  # TODO: gitlab/#293674: variable expansion bug
  # Jobs for deploying and undeploying review apps are currently unable to use the 'needs'
  # keyword due to a bug in how GitLab handles variables for deployment environments.
  # Therefore, we define these jobs as early as possibly -- just after 'build'ing their
  # dependencies. CTRL+F 'gitlab/#293674' for further information.
  - review
  - qa
  - post-qa

  - test
  - coverage
  - prepare-release
  - release
  - deploy
  - docs

variables:
  BACKEND_IMAGE_SHA: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
  FRONTEND_IMAGE_SHA: ${CI_REGISTRY_IMAGE}/frontend:${CI_COMMIT_SHA}
  FRONTEND_TEST_IMAGE_SHA: ${CI_REGISTRY_IMAGE}/frontend-test:${CI_COMMIT_SHA}
  KEYCLOAK_IMAGE_SHA: ${CI_REGISTRY_IMAGE}/keycloak:${CI_COMMIT_SHA}
  KEYCLOAK_DB_IMAGE_SHA: ${CI_REGISTRY_IMAGE}/keycloak-db:${CI_COMMIT_SHA}

  PYPROJECT_ROOT: "./backend"

  # We use kaniko v0.13.0 as newer versions contain fatal bugs
  KANIKO_VERSION: v1.3.0-debug
  BACKEND_RELEASE_REGISTRY_IMAGE: index.docker.io/magentaaps/os2mo
  FRONTEND_RELEASE_REGISTRY_IMAGE: index.docker.io/magentaaps/os2mo-frontend

  REVIEW_URL: "https://$REVIEW_SLUG.moraci.magentahosted.dk"
  REVIEW_CONFIG_UPDATER_URL: "https://config-updater.magentahosted.dk/os2mo/review-apps/os2mo"

include:
  - project: "labs/salt-automation"
    ref: "master"
    file: "/gitlab-ci-templates/common/autopub.v1.yml"
  - project: "labs/salt-automation"
    ref: "master"
    file: "/gitlab-ci-templates/common/docker-release-meta.v1.yml"
  - project: "labs/salt-automation"
    ref: "master"
    file: "/gitlab-ci-templates/common/config-updater-meta.v1.yml"


# Conditions
#############
# Global Conditions
.if-default-branch-refs: &if-default-branch-refs
  if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

.if-tag: &if-tag
  if: '$CI_COMMIT_TAG'

.if-tag-semver: &if-tag-semver
  if: '$CI_COMMIT_TAG =~ /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/'

.if-merge-request: &if-merge-request
  if: '$CI_MERGE_REQUEST_IID'

.if-schedule: &if-schedule
  if: '$CI_PIPELINE_SOURCE == "schedule"'

# Sync Conditions
.if-merge-request-labels-dont-interrupt: &if-merge-request-labels-dont-interrupt
  if: "$CI_MERGE_REQUEST_LABELS =~ /Pipeline::Sync::Don't Interrupt/"

# Review / QA Conditions
.if-merge-request-labels-run-review-app: &if-merge-request-labels-run-review-app
  if: '$CI_MERGE_REQUEST_LABELS =~ /Pipeline::Review::Run Review App/'

.if-merge-request-labels-run-qa: &if-merge-request-labels-run-qa
  if: '$CI_MERGE_REQUEST_LABELS =~ /Pipeline::Review::Run QA/'


# Workflow
###########
workflow:
  rules:
    - <<: *if-tag
      variables:
        # Override the IMAGE_SHA variable on tag pipelines to avoid both the default
        # branch pipeline and tag pipeline overriding each other's images arbitrarily when
        # they are both running at the same time on master.
        BACKEND_IMAGE_SHA: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
    - <<: *if-default-branch-refs
      variables:
        # Review values cannot be changed without also modifying salt-automation/config-updater
        REVIEW_SLUG: "review-os2mo-master-$CI_COMMIT_SHORT_SHA"
        REVIEW_DEPLOY_URL: "$REVIEW_CONFIG_UPDATER_URL/deploy-master?commit_sha=$CI_COMMIT_SHA"
        REVIEW_UNDEPLOY_URL: "$REVIEW_CONFIG_UPDATER_URL/undeploy-master?commit_sha=$CI_COMMIT_SHA"
        REVIEW_DELETE_TF_STATE_URL: "$REVIEW_CONFIG_UPDATER_URL/delete-master-tf-state?commit_sha=$CI_COMMIT_SHA"
    - <<: *if-merge-request
      variables:
        # Review values cannot be changed without also modifying salt-automation/config-updater
        REVIEW_SLUG: "review-os2mo-mr${CI_MERGE_REQUEST_IID}"
        REVIEW_DEPLOY_URL: "$REVIEW_CONFIG_UPDATER_URL/deploy-mr?mr_id=$CI_MERGE_REQUEST_IID&commit_sha=$CI_COMMIT_SHA"
        REVIEW_UNDEPLOY_URL: "$REVIEW_CONFIG_UPDATER_URL/undeploy-mr?mr_id=$CI_MERGE_REQUEST_IID"
        REVIEW_DELETE_TF_STATE_URL: "$REVIEW_CONFIG_UPDATER_URL/delete-mr-tf-state?mr_id=$CI_MERGE_REQUEST_IID"

default:
  # All jobs are interruptible by default
  interruptible: true


# Services
###########
.services-start-base:
  variables:
    FF_NETWORK_PER_BUILD: 1  # activate container-to-container networking

.services:start-mox:
  extends:
    - .services-start-base
  services:
    - name: magentaaps/postgres-os2mo:10-11.7-test  # TODO: upgrade?
      alias: mox-db
      variables:
        DB_NAME: mox
        DB_USER: mox
        DB_PASSWORD: mox
    - name: magentaaps/lora:4.7.1
      alias: mox
      variables:
        MAX_WORKERS: "1"
        TESTING_API: "true"
        LORA_AUTH: "false"
        DB_HOST: mox-db
        DB_NAME: mox
        DB_USER: mox
        DB_PASSWORD: mox

.services:start-keycloak:
  extends:
    - .services-start-base
  needs:
    - Build Keycloak DB
    - Build Keycloak
  services:
    - name: $KEYCLOAK_DB_IMAGE_SHA
      alias: keycloak-db
    - name: $KEYCLOAK_IMAGE_SHA
      alias: keycloak

.services:start-all:
  extends:
    - .services:start-mox
    - .services:start-keycloak
  needs: !reference [".services:start-keycloak", needs]
  services:
    - !reference [".services:start-mox", services]
    - !reference [".services:start-keycloak", services]
    - name: ${BACKEND_IMAGE_SHA}
      alias: mo

.services:mo-base:
  variables:
    PYTHONASYNCIODEBUG: "1"
    ENVIRONMENT: "testing"
    DUMMY_MODE: "true"
    LORA_URL: "http://mox/"

    KEYCLOAK_SCHEMA: "http"
    KEYCLOAK_PORT: 8080
    KEYCLOAK_AUTH_SERVER_URL: "http://keycloak:8080/auth/"
    KEYCLOAK_VERIFY_AUDIENCE: "false"

    CONF_DB_HOST: "mox-db"
    CONF_DB_PORT: "5432"
    CONF_DB_NAME: mora
    CONF_DB_USER: mora
    CONF_DB_PASSWORD: mora

    AMQP_ENABLE: "false"
    QUERY_EXPORT_DIR: "/queries"
    GRAPHQL_AUTH: "false"
    QUERY_EXPORT_DIR: "/tmp"

.services:start-mo:
  extends:
    - .services:mo-base
    - .services:start-all
  needs:
    - !reference [".services:start-all", needs]
    - Build OS2MO
  services:
    - !reference [".services:start-all", services]
    - name: ${BACKEND_IMAGE_SHA}
      alias: mo

.services:use-mo:
  extends:
    - .services:mo-base
  needs:
    - Build OS2MO
  image: $BACKEND_IMAGE_SHA

.services:use-frontend:
  needs:
    - Build test frontend
  image: $FRONTEND_TEST_IMAGE_SHA
  variables:
    BASE_URL: "http://mo"


# Sync
#######
Don't Interrupt:
  stage: sync
  image: alpine:latest
  interruptible: false
  variables:
    GIT_STRATEGY: none
  script:
    - echo "This jobs makes sure this pipeline won't be interrupted!"
    - echo "It works because you cannot cancel subsequent jobs after a job with interruptible=false starts."
    - echo "See https://docs.gitlab.com/ee/ci/yaml/#interruptible for more information."
  rules:
    - <<: *if-default-branch-refs
    - <<: *if-tag
    - <<: *if-schedule
    - <<: *if-merge-request-labels-dont-interrupt
    - when: manual
      allow_failure: true


# Lint
#######
.lint-base:
  stage: lint
  needs: []
  image: python:3.9
  # TODO: Individual lint rules for each file type using 'changes' patterns
  rules:
    - <<: *if-merge-request

Pre-commit:
  extends: .lint-base
  before_script:
    - pip install pre-commit pydocstyle
    - pre-commit install
    # Fetch terraform
    - TERRAFORM_VERSION="1.1.6"
    - TERRAFORM_DOWNLOAD_URL=https://releases.hashicorp.com/terraform
    - TERRAFORM_URL=${TERRAFORM_DOWNLOAD_URL}/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    - curl -o terraform_linux_amd64.zip -sL ${TERRAFORM_URL}
    - unzip terraform_linux_amd64.zip -d /usr/bin/
    - chmod +x /usr/bin/terraform
  script:
    - pre-commit run --all-files
    - pydocstyle backend/mora/graphapi/ --convention=google --add-ignore=D1

Lint Dockerfiles:
  # TODO: Do this as part of pre-commit instead
  extends: .lint-base
  image: hadolint/hadolint:latest-debian
  before_script:
    - apt-get -y update
    - apt-get -y install --no-install-recommends git
  script:
    - git ls-files --exclude='*Dockerfile*' --ignored | xargs --max-lines=1 hadolint

REUSE compliance:
  # TODO: Do this as part of pre-commit instead
  extends: .lint-base
  image:
    name: fsfe/reuse:latest
    entrypoint: [""]
  script:
    - reuse lint

Lint shell scripts:
  # TODO: Do this as part of pre-commit instead
  extends: .lint-base
  image: koalaman/shellcheck-alpine:latest
  before_script:
    - apk update
    - apk add git
  script:
    - git ls-files --exclude='*.sh' --ignored -c | xargs shellcheck


# Build
########
.build-base:
  stage: build
  needs: []
  image:
    name: gcr.io/kaniko-project/executor:${KANIKO_VERSION}
    entrypoint: [""]

.build:release-image:
  extends:
    - .build-base
  rules:
    - <<: *if-schedule
      when: never
    - when: on_success

.build:test-image:
  extends:
    - .build-base
  rules:
    - <<: *if-merge-request

Build OS2MO:
  extends: .build:release-image
  # TODO: Use gitlab-ci-templates/common/docker-build-meta.v1.yml instead. Migration requires support for COMMIT_SHA and
  # COMMIT_TAG, see https://git.magenta.dk/rammearkitektur/os2mo-triggers/os2mo-amqp-trigger-calculate-primary/-/blob/master/Dockerfile
  # for alternatives to --build-arg.
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --cache
      --context=$CI_PROJECT_DIR
      --dockerfile=$CI_PROJECT_DIR/docker/api.Dockerfile
      --destination=${BACKEND_IMAGE_SHA}
      --build-arg=COMMIT_SHA=${CI_COMMIT_SHA}
      --build-arg=COMMIT_TAG=${CI_COMMIT_TAG}

Build frontend:
  extends: .build:release-image
  # TODO: Use gitlab-ci-templates/common/docker-build-meta.v1.yml instead
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --cache
      --context=$CI_PROJECT_DIR
      --dockerfile=$CI_PROJECT_DIR/docker/frontend.Dockerfile
      --destination=${FRONTEND_IMAGE_SHA}
      --build-arg=COMMIT_SHA=${CI_COMMIT_SHA}
      --build-arg=COMMIT_TAG=${CI_COMMIT_TAG}

Build test frontend:
  extends: .build:test-image
  # TODO: Use gitlab-ci-templates/common/docker-build-meta.v1.yml instead
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --cache
      --context=$CI_PROJECT_DIR
      --dockerfile=$CI_PROJECT_DIR/docker/frontend.Dockerfile
      --destination=${FRONTEND_TEST_IMAGE_SHA}
      --build-arg=COMMIT_SHA=${CI_COMMIT_SHA}
      --build-arg=COMMIT_TAG=${CI_COMMIT_TAG}
      --target frontend

Build Keycloak-realm:
  extends: .build:test-image
  image:
    # TODO: Use new realm builder
    name: magentaaps/os2mo-keycloak-realm-builder:2.3.0
    entrypoint: [""]
  variables:
    GIT_STRATEGY: none # We do not need the source code
    KEYCLOAK_VERSION: 14.0.0
    KEYCLOAK_SSL_REQUIRED: external # for MO
    KEYCLOAK_SSL_REQUIRED_MO: external # for realm builder
    KEYCLOAK_LORA_REALM_ENABLED: "true"
    KEYCLOAK_LORA_CLIENT_SECRET: 158a2075-aa8a-421c-94a4-2df35377014a
    KEYCLOAK_DIPEX_CLIENT_ENABLED: "true"
    KEYCLOAK_DIPEX_CLIENT_SECRET: "603f1c82-d012-4d04-9382-dbe659c533fb"
    KEYCLOAK_REALM_USERS: '[{"username": "bruce", "password": "bruce", "firstname": "Bruce", "lastname": "Lee", "email": "bruce@kung.fu", "enabled": true, "uuid": "99e7b256-7dfa-4ee8-95c6-e3abe82e236a"}]'
    KEYCLOAK_MO_CLIENT_REDIRECT_URI: '["*"]'
    KEYCLOAK_MO_CLIENT_WEB_ORIGIN: '["*"]'
  script:
    - export KEYCLOAK_REALM_JSON_PATH=$PWD/keycloak-realm.json
    - cd /app
    - python main.py
  artifacts:
    paths:
      - keycloak-realm.json
    expire_in: 1 day

Build Keycloak:
  extends: .build:test-image
  needs:
    - Build Keycloak-realm
  # TODO: Use gitlab-ci-templates/common/docker-build-meta.v1.yml instead
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --cache
      --context=$CI_PROJECT_DIR
      --dockerfile=$CI_PROJECT_DIR/docker/ci.keycloak.Dockerfile
      --destination=${KEYCLOAK_IMAGE_SHA}

Build Keycloak DB:
  extends: .build:test-image
  # TODO: Use gitlab-ci-templates/common/docker-build-meta.v1.yml instead
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --cache
      --context=$CI_PROJECT_DIR
      --dockerfile=$CI_PROJECT_DIR/docker/ci.keycloak-db.Dockerfile
      --destination=${KEYCLOAK_DB_IMAGE_SHA}

# Schemathesis tests
####################
# TODO: Use Review cluster?
.Schemathesis-GraphQL-test:
  extends:
    - .test-base
    - .services:start-mo
  image:
    name: schemathesis/schemathesis:stable
    entrypoint: ["/bin/sh", "-c"]
  variables:
    TESTCAFE_ENABLE: "false"
  script:
    - until wget --quiet -O- "http://mo/version/"; do sleep 5; done
    - schemathesis run --workers auto --hypothesis-deadline=None --hypothesis-suppress-health-check=too_slow --show-errors-tracebacks http://mo/graphql

# TODO: Use Review cluster?
Schemathesis-OpenAPI-test:
  extends:
    - .test-base
    - .services:start-mo
  image:
    name: schemathesis/schemathesis:stable
    entrypoint: ["/bin/sh", "-c"]
  variables:
    TESTCAFE_ENABLE: "false"
  script:
    - until wget --quiet -O- "http://mo/version/"; do sleep 5; done
    - schemathesis run --workers auto --fixups=fast_api --stateful=links --checks all
      --endpoint '^/organisation/'
      --endpoint '^/medarbejder/'
      --endpoint '^/organisationssammenkobling'
      --endpoint '^/forespoergsler'
      --endpoint '^/indsigt/'
      --endpoint '^/favicon.ico$'
      http://mo/openapi.json

# Tests
########
.test-base:
  stage: test
  variables:
    # $CI_JOB_ID is unique across parallel jobs, so this works as expected
    COVERAGE_FILE: $CI_PROJECT_DIR/.coverage.$CI_JOB_ID
  rules:
    - <<: *if-merge-request


# Backend Tests
################
.backend-test-base:
  extends:
    - .test-base
    - .services:use-mo
  variables:
    HYPOTHESIS_PROFILE: "ci"
    QUERY_EXPORT_DIR: "/tmp"

Unit-test:
  extends:
    - .backend-test-base
  script:
    - pytest backend/tests
      -p no:cacheprovider
      -m "not serial"
      -k "not graphapi"
      --color=yes
      --show-capture=no
      --junitxml $CI_PROJECT_DIR/junit.xml
      --cov=mora
      --workers auto
  artifacts:
    when: always
    paths:
      - $COVERAGE_FILE
    reports:
      junit: $CI_PROJECT_DIR/junit.xml

GraphAPI-test:
  extends:
    - .backend-test-base
  script:
    - pytest
      backend/tests/graphapi
      backend/tests/graphapi-shim/
      -p no:cacheprovider
      --color=yes
      --show-capture=no
      --junitxml $CI_PROJECT_DIR/junit.xml
      --cov=backend/mora/graphapi
      --cov-report html:$CI_PROJECT_DIR/coverage-html
      --cov-report term
      --cov-fail-under=40
  artifacts:
    when: always
    paths:
      - $CI_PROJECT_DIR/coverage-html
      - $COVERAGE_FILE
    reports:
      junit: $CI_PROJECT_DIR/junit.xml

GraphAPI-Integration-test:
  extends:
    - .backend-test-base
    - .services:start-all
  needs:
    - !reference [".backend-test-base", needs]
    - !reference [".services:start-all", needs]
  parallel: 4
  script:
    - pytest
      backend/tests/integration/
      -k "graphapi"
      -p no:cacheprovider
      --color=yes
      --show-capture=no
      --junitxml $CI_PROJECT_DIR/junit.xml
      --cov=mora
      --group $CI_NODE_INDEX
      --splits $CI_NODE_TOTAL
      --splitting-algorithm least_duration
      --durations-path backend/tests/.test_durations
  artifacts:
    when: always
    paths:
      - $COVERAGE_FILE
    reports:
      junit: $CI_PROJECT_DIR/junit.xml

Integration-test:
  extends:
    - .backend-test-base
    - .services:start-all
  needs:
    - !reference [".backend-test-base", needs]
    - !reference [".services:start-all", needs]
  parallel: 8
  script:
    - pytest backend/tests
      -m "serial and not equivalence"
      -p no:cacheprovider
      --color=yes
      --show-capture=no
      --junitxml $CI_PROJECT_DIR/junit.xml
      --cov=mora
      --group $CI_NODE_INDEX
      --splits $CI_NODE_TOTAL
      --splitting-algorithm least_duration
      --durations-path backend/tests/.test_durations
  artifacts:
    when: always
    paths:
      - $COVERAGE_FILE
    reports:
      junit: $CI_PROJECT_DIR/junit.xml

Coverage:
  stage: coverage
  image: python:3.9-slim
  needs:
    - Unit-test
    - GraphAPI-test
    - Integration-test
  before_script:
    - pip install coverage
    - coverage combine
  script:
    - coverage report --fail-under=85 --skip-empty
  after_script:
    - coverage html -d $CI_PROJECT_DIR/coverage-html --skip-empty
    - coverage xml -o $CI_PROJECT_DIR/coverage.xml --skip-empty
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    when: always
    paths:
      - coverage-html
    reports:
      cobertura: $CI_PROJECT_DIR/coverage.xml
  rules:
    - <<: *if-merge-request

# Frontend Tests
#################
.frontend-test-base:
  extends:
    - .test-base
    - .services:use-frontend

Vue-unit-test:
  extends:
    - .frontend-test-base
  variables:
    GIT_STRATEGY: none
  script:
    - cd /app/frontend
    - yarn install --dev
    - yarn test:unit
      --coverage
      --coverageReporters=cobertura
      --coverageReporters=html
      --coverageReporters=text-summary
      --coverageDirectory=$CI_PROJECT_DIR/coverage
  artifacts:
    when: always
    paths:
      - $CI_PROJECT_DIR/coverage
    # reports:
    #   cobertura: $CI_PROJECT_DIR/coverage/cobertura-coverage.xml

# TODO: Move to QA / use cluster services?
# e2e-test:
#   extends: .test-base
#   image:
#     name: magentalabs/testcafe:latest
#     entrypoint: ["/bin/sh", "-c"]
#   script:
#     - sleep 30
#     - cd /
#     - /opt/testcafe/docker/testcafe-docker.sh
#         chromium:headless
#         $CI_PROJECT_DIR/frontend/e2e-tests
#         --skip-js-errors
#         --speed 0.7
#         --selector-timeout 30000
#         --screenshot $CI_PROJECT_DIR/artifacts
#         --video $CI_PROJECT_DIR/artifacts
#   artifacts:
#     when: always
#     paths:
#       - $CI_PROJECT_DIR/artifacts
#   allow_failure: true

# SPDX-FileCopyrightText: 2022 Magenta ApS
# SPDX-License-Identifier: MPL-2.0


# Review
#########
# TODO: gitlab/#293674: variable expansion bug
# GitLab does not currently expand variables properly in all cases, so instead of defining
# a single 'Deploy Review' job with `environment: name/url` referencing a variable
# $REVIEW_SLUG, we need to define two different jobs with the variable values hard-coded.
# See https://gitlab.com/gitlab-org/gitlab/-/issues/293674 for more information.
.deploy-review:
  stage: review
  needs:
    - Build OS2MO
  image: debian:bookworm
  variables:
    GIT_STRATEGY: none  # We do not need the source code
  before_script:
    - apt-get update && apt-get install -y curl jq
  script:
    - curl
      --silent
      --fail-with-body
      --request POST
      --user $CONFIG_UPDATER_REVIEW_APP_USERNAME:$CONFIG_UPDATER_REVIEW_APP_PASSWORD
      $REVIEW_DEPLOY_URL
    - until $(curl "${REVIEW_URL}/version/" | jq ".mo_hash == \"$CI_COMMIT_SHA\""); do sleep 5; done
  environment:
    #name: "review/$REVIEW_SLUG"
    #url: $REVIEW_URL
    #on_stop: Stop Review
    auto_stop_in: 1 week
  tags:
    - deploy
  #rules:
  #  - <<: *if-schedule
  #    when: never
  #  - <<: *if-default-branch-refs
  #  - <<: *if-merge-request-labels-run-review-app
  #  - <<: *if-merge-request-labels-run-qa
  #  - <<: *if-merge-request
  #    when: manual
  #    allow_failure: true
Deploy Review Master:
  extends:
    - .deploy-review
  environment:
    name: "review/review-os2mo-master-$CI_COMMIT_SHORT_SHA"
    url: "https://review-os2mo-master-$CI_COMMIT_SHORT_SHA.moraci.magentahosted.dk"
    on_stop: Stop Review Master
  rules:
    - <<: *if-schedule
      when: never
    - <<: *if-default-branch-refs
Deploy Review MR:
  extends:
    - .deploy-review
  environment:
    name: "review/review-os2mo-mr$CI_MERGE_REQUEST_IID"
    url: "https://review-os2mo-mr$CI_MERGE_REQUEST_IID.moraci.magentahosted.dk"
    on_stop: Stop Review MR
  rules:
    - <<: *if-merge-request-labels-run-review-app
    - <<: *if-merge-request-labels-run-qa
    - <<: *if-merge-request
      when: manual
      allow_failure: true


# QA
#####
.qa-base:
  stage: qa
  rules:
    - <<: *if-schedule
      when: never
    - <<: *if-default-branch-refs
    - <<: *if-merge-request-labels-run-qa
    - <<: *if-merge-request
      when: manual
      allow_failure: true

Create Performance Test Keycloak Token:
  extends:
    - .qa-base
  # TODO: gitlab/#293674: variable expansion bug
  # This would ideally use 'needs', but we're unable to at the moment.
  #needs:
  #  - Deploy Review
  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  variables:
    TF_ADDRESS: "$CI_API_V4_URL/projects/$CI_PROJECT_ID/terraform/state/tempotest-$REVIEW_SLUG"
    TF_VAR_keycloak_admin_password: $REVIEW_KEYCLOAK_ADMIN_PASSWORD
    TF_VAR_keycloak_url: "$REVIEW_URL"
    TF_VAR_keycloak_tempotest_client_secret: $TEMPOTEST_CLIENT_SECRET
  before_script:
    - cd tempotest/
    - gitlab-terraform init
    - gitlab-terraform validate
  script:
    - gitlab-terraform plan
    - gitlab-terraform plan-json
    - gitlab-terraform apply

Performance Tests:
  extends:
    - .qa-base
  needs:
    - Create Performance Test Keycloak Token
  image:
    name: grafana/k6:0.37.0
    entrypoint: [""]
  tags:
    - high-mem  # we don't want other jobs impacting the test results
  before_script:
    - cd tempotest/
  script:
    - k6 run script.js
      --out=csv=load-performance.csv
      --summary-export=load-performance.json
      --system-tags="status,method,name,group,check,error,error_code,scenario,expected_response"
  variables:
    MO_URL: "$REVIEW_URL"
    AUTH_SERVER: "$REVIEW_URL/auth"
    CLIENT_ID: "tempotest"
    CLIENT_SECRET: "$TEMPOTEST_CLIENT_SECRET"
  artifacts:
    name: "tempotest"
    expire_in: 1 month
    when: always
    paths:
      - tempotest/load-performance.csv
    reports:
      load_performance: tempotest/load-performance.json

Upload Performance Test Results:
  extends:
    - .qa-base
  needs:
    - Performance Tests
  image:
    name: postgres:14
    entrypoint: [""]
  before_script:
    - mkdir ~/.postgresql
    # grafana_events_db google_sql_ssl_cert.clients_shared.server_ca_cert
    - |
      cat << EOT > ~/.postgresql/root.crt
      -----BEGIN CERTIFICATE-----
      MIIDfzCCAmegAwIBAgIBADANBgkqhkiG9w0BAQsFADB3MS0wKwYDVQQuEyQwNzZm
      MzVhMS03MjdkLTRlNzQtOWViNy1iOTBkYTA0Mjk4ZWMxIzAhBgNVBAMTGkdvb2ds
      ZSBDbG91ZCBTUUwgU2VydmVyIENBMRQwEgYDVQQKEwtHb29nbGUsIEluYzELMAkG
      A1UEBhMCVVMwHhcNMjIwNDIxMDgzOTI0WhcNMzIwNDE4MDg0MDI0WjB3MS0wKwYD
      VQQuEyQwNzZmMzVhMS03MjdkLTRlNzQtOWViNy1iOTBkYTA0Mjk4ZWMxIzAhBgNV
      BAMTGkdvb2dsZSBDbG91ZCBTUUwgU2VydmVyIENBMRQwEgYDVQQKEwtHb29nbGUs
      IEluYzELMAkGA1UEBhMCVVMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
      AQDJUTpRf6INuo20cJnphO9+9WGMtDxEUXkpWu7G7D6LfwVqeN0Sb+63yY8qpHBu
      JUgLFFyGQ6jrpCEkVqHGVux6jZB7vY56SqvvEyk/9eEyOxsBt1vVTAa/Ka1K++cL
      2XAxwcaVfFFF/EqFDjJeKfGZTtxcL0MpnyWjOVQ55AcF5aQiZJHHLys5Or5om/HV
      SikJvp5pg/rTN9NWGHOgf0fv3p2AgXfAdfNLnYJO2/Ax62yiP77qBa6Nnq95qe9C
      dkRXHVun03okDRltyEapIUUYxGaIYOP+1v0j02XoC6yJSLr+beIc3NLtKC3l2xoO
      P1DcNM9v9v5Esx32U/yLNZfvAgMBAAGjFjAUMBIGA1UdEwEB/wQIMAYBAf8CAQAw
      DQYJKoZIhvcNAQELBQADggEBAFXe3bK2D1vnWdzp+b9namonpn6qwuCcro+bJTHE
      QgacCIdCzIu8iODsBhX/VmyAggkYoc3qppmH7nkjeTbQYtGxorpRnHNwtPS6tF6C
      iXIMwMOZmPHdyhUAyosARFWF6sIOGoKZkLh1kamQhE5jJd9kNr7wYD+pPYYFL1VY
      WSYnz28Puo7QEsZwJNaqyDVm/RG2GB3q6eU9Dl/iaoJGSGnKb4kUz0LSiiuhM7tF
      4LJasDJdMz0cuOMHVXi8mxs3p/do7d5OWdLuSiZZMqdltCsgsLa7aIL4jskWIsPR
      f7LBO0OEEKekUK+aYaDWuE+Noi9wSm0h9JnxuHWYFyTgf1k=
      -----END CERTIFICATE-----
      EOT
    # grafana_events_db google_sql_ssl_cert.clients_shared.cert
    - |
      cat << EOT > ~/.postgresql/postgresql.crt
      -----BEGIN CERTIFICATE-----
      MIIDbDCCAlSgAwIBAgIEIa6H8zANBgkqhkiG9w0BAQsFADCBhjEtMCsGA1UELhMk
      NWIyMjdhYTktNDgzNC00ZDY3LWE4MmItNGZiMzE1ZDIxYWQ1MTIwMAYDVQQDEylH
      b29nbGUgQ2xvdWQgU1FMIENsaWVudCBDQSBjbGllbnRzLXNoYXJlZDEUMBIGA1UE
      ChMLR29vZ2xlLCBJbmMxCzAJBgNVBAYTAlVTMB4XDTIyMDQyMjEzMjg1NFoXDTMy
      MDQxOTEzMjk1NFowPDEXMBUGA1UEAxMOY2xpZW50cy1zaGFyZWQxFDASBgNVBAoT
      C0dvb2dsZSwgSW5jMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcNAQEBBQADggEP
      ADCCAQoCggEBAKvYpWC+DI0ACWRRfmllGGzKgFCdg92iOUvV0wx0QiUh6oFhvy48
      qhhCKth8jHlaQyM9x9101hQ2GxchBPxwfK/sKscIDG9wQH9HpmWdIzG6bMsHuw2n
      4xEzWqUlFdqSUl2rXxQMy/HwHFbpKFZheAjR+Z5bU43JecMuo+lvOfmM3UMJhctW
      vp8VtywUEV+6Xx5jwjj3b9ZbE95Itp7WPI8CfF1RRnMgNQKUxiPrA2wv/ySSF2Id
      HoHYhv+GPsJwiIAHsrKt9FxkH/bMnqc2DQ3G98Ti4Z3m2Yf781ugZD+6qRFAGfI9
      PrBOSx50hqkpOYXn05spNQstHEVzXmbTVzMCAwEAAaMrMCkwCQYDVR0TBAIwADAc
      BgNVHREEFTATgRF2a0BtYWdlbnRhLWFwcy5kazANBgkqhkiG9w0BAQsFAAOCAQEA
      ha+jR9z+nawVhx17RGu81dLY65dTh0P/dIpwKG8qClOTNOhvgKAyaYDarAZkM64I
      BoVVg/GZT9YxzwpsiZQ2mGMdbx0F1wp4EI1ABebBVC59cbeDDjAs8MPVuPte6W67
      XZ8PUoElJICliUUvxae2SXYg1tfIDG/gn4yDm/rXWM4orSAStEKP1pp3se8bdPXm
      DfP0dO6ZCipNuT3UnZ7DUNYPXl72znXZ1dtlZhVcHP1+eVw3WcptfJZc0t0nJzhg
      HCmkyDRw7+51C8Xm3gc/IwmDCFZdWfvVgVZTCYxgcpiCFeu/JAiWGPDpIiEGm6F0
      YfeITRi7JKFul6ELGfi0RA==
      -----END CERTIFICATE-----
      EOT
    # grafana_events_db google_sql_ssl_cert.clients_shared.private_key
    - echo $TEMPOTEST_DATABASE_CLIENT_KEY | base64 --decode > ~/.postgresql/postgresql.key
    - chmod 0600 ~/.postgresql/postgresql.key
    - cd tempotest/
  script:
    - ./upload.sh load-performance.csv
  after_script:
    - rm ~/.postgresql/postgresql.key
  variables:
    PGHOST: grafana-events-db.internal.magentahosted.dk
    PGDATABASE: events
    PGUSER: os2mo_k6
    PGPASSWORD: $TEMPOTEST_DATABASE_PASSWORD
    PGSSLMODE: verify-ca


# Post-QA
##########
.post-qa-base:
  stage: post-qa

# TODO: gitlab/#293674: variable expansion bug
# See the deploy job for details and discussion about why this is needed.
.stop-review:
  extends:
    - .post-qa-base
  image: curlimages/curl:7.81.0
  variables:
    GIT_STRATEGY: none  # We do not need the source code
  script:
    - curl
      --silent
      --fail-with-body
      --request POST
      --user $CONFIG_UPDATER_REVIEW_APP_USERNAME:$CONFIG_UPDATER_REVIEW_APP_PASSWORD
      $REVIEW_UNDEPLOY_URL
  environment:
    #name: "review/$REVIEW_SLUG"
    action: stop
  tags:
    - deploy
  #rules:
  #  - <<: *if-schedule
  #    when: never
  #  - <<: *if-default-branch-refs
  #    when: always
  #  - <<: *if-merge-request
  #    when: manual
  #    allow_failure: true
Stop Review Master:
  extends:
    - .stop-review
  environment:
    name: "review/review-os2mo-master-$CI_COMMIT_SHORT_SHA"
  rules:
    - <<: *if-schedule
      when: never
    - <<: *if-default-branch-refs
      when: always
Stop Review MR:
  extends:
    - .stop-review
  environment:
    name: "review/review-os2mo-mr$CI_MERGE_REQUEST_IID"
  rules:
    - <<: *if-merge-request
      when: manual
      allow_failure: true

# TODO: gitlab/#293674: variable expansion bug
# The 'Delete Review Terraform State' job NEEDS to depend on 'Stop Review' so that it runs
# iff the environment is stopped. Therefore we cannot simply move it to a later stage.
.delete-review-terraform-state:
  extends:
    - .post-qa-base
  #needs:
  #  - Stop Review
  image: curlimages/curl:7.81.0
  script:
    - curl
      --silent
      --fail-with-body
      --request POST
      --user $CONFIG_UPDATER_REVIEW_APP_USERNAME:$CONFIG_UPDATER_REVIEW_APP_PASSWORD
      $REVIEW_DELETE_TF_STATE_URL
  tags:
    - deploy
Delete Review Terraform State Master:
  extends:
    - .delete-review-terraform-state
  needs:
    - Stop Review Master
  rules:
    - <<: *if-schedule
      when: never
    - <<: *if-default-branch-refs
Delete Review Terraform State MR:
  extends:
    - .delete-review-terraform-state
  needs:
    - Stop Review MR
  rules:
    - <<: *if-merge-request


# Release
##########

Release API master:
  extends:
    - .release-master
  variables:
    CI_IMAGE: $BACKEND_IMAGE_SHA
    RELEASE_IMAGE: $BACKEND_RELEASE_REGISTRY_IMAGE

Release API version:
  extends:
    - .release-version
  variables:
    CI_IMAGE: $BACKEND_IMAGE_SHA
    RELEASE_IMAGE: $BACKEND_RELEASE_REGISTRY_IMAGE

Release Frontend master:
  extends:
    - .release-master
  variables:
    CI_IMAGE: $FRONTEND_IMAGE_SHA
    RELEASE_IMAGE: $FRONTEND_RELEASE_REGISTRY_IMAGE

Release Frontend version:
  extends:
    - .release-version
  variables:
    CI_IMAGE: $FRONTEND_IMAGE_SHA
    RELEASE_IMAGE: $FRONTEND_RELEASE_REGISTRY_IMAGE


# Deploy
#########
# Flux
Deploy to Flux Dev:
  extends: .release-to-dev
  needs:
    - Release API version
  variables:
    ENDPOINT: os2mo/flux/os2mo/update-dev

Deploy to Flux Test:
  extends: .release-to-test
  needs: []
  variables:
    ENDPOINT: os2mo/flux/os2mo/update-test

Deploy to Flux Prod:
  extends: .release-to-prod
  needs: []
  variables:
    ENDPOINT: os2mo/flux/os2mo/update-prod

# Salt
Deploy to Salt Dev:
  extends: .release-to-dev
  needs:
    - Release API version
  variables:
    ENDPOINT: os2mo/salt/os2mo/update-dev

Deploy to Salt Test:
  extends: .release-to-test
  needs: []
  variables:
    ENDPOINT: os2mo/salt/os2mo/update-test

Deploy to Salt Prod:
  extends: .release-to-prod
  needs: []
  variables:
    ENDPOINT: os2mo/salt/os2mo/update-prod


# Docs
#######
.docs-base:
  stage: docs

.docs:rules:deploy-branch-docs:
  rules:
    - <<: *if-merge-request

.docs:rules:deploy-master-docs:
  rules:
    - <<: *if-schedule
      when: never
    - <<: *if-tag-semver
      when: never
    - <<: *if-default-branch-refs

.docs:rules:build-docs:
  rules:
    - !reference [".docs:rules:deploy-branch-docs", rules]
    - !reference [".docs:rules:deploy-master-docs", rules]

Export GQL Schema:
  extends:
    - .docs-base
    - .docs:rules:build-docs
    - .services:use-mo
  variables:
    OUT: $CI_PROJECT_DIR/docs/src/graphql/voyager.html
    QUERY_EXPORT_DIR: "/tmp"
  script:
    - python docs/schema_to_voyager.py
  artifacts:
    paths:
      - $OUT

.build-docs:
  extends:
    - .docs-base
    - .docs:rules:build-docs
  needs:
    - Export GQL Schema
  image: python:3.9
  variables:
    POETRY_VERSION: 1.1.12
    POETRY_VIRTUALENVS_CREATE: "false"
  before_script:
    - pip3 install poetry==${POETRY_VERSION}
    - cd docs && poetry install --no-interaction
  script:
    - mkdocs build --strict --site-dir=$CI_PROJECT_DIR/site
  artifacts:
    paths:
      - $CI_PROJECT_DIR/site
    expire_in: 1 week

Build and deploy branch docs:
  extends:
    - .build-docs
    - .docs:rules:deploy-branch-docs
  environment:
    name: docs/$CI_COMMIT_REF_SLUG
    url: $CI_JOB_URL/artifacts/file/site/index.html
    auto_stop_in: 1 week

Build master docs:
    extends:
    - .build-docs
    - .docs:rules:deploy-master-docs

# To release to GitLab Pages, the job must be called 'pages'
pages:
  extends:
    - .docs-base
    - .docs:rules:deploy-master-docs
  needs:
    - Build master docs
  image: alpine:latest
  script:
    - cp -r $CI_PROJECT_DIR/site public
  artifacts:
    paths:
      - public/
