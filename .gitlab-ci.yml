# SPDX-FileCopyrightText: Magenta ApS <https://magenta.dk>
# SPDX-License-Identifier: MPL-2.0

stages:
  - sync
  - lint
  - build
  - review
  - test
  - coverage
  - prepare-release
  - release
  - deploy
  - docs

variables:
  KEYCLOAK_IMAGE_SHA: ${CI_REGISTRY_IMAGE}/keycloak:${CI_COMMIT_SHA}

  IMAGE_SHA: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
  RELEASE_REGISTRY_IMAGE: index.docker.io/magentaaps/os2mo

  # Review values cannot be changed without also modifying salt-automation/config-updater
  REVIEW_CONFIG_UPDATER_URL: "https://config-updater.magentahosted.dk/os2mo/review-apps/os2mo"

  PRODUCT: os2mo
  COMPONENT: os2mo

# Conditions
#############
# Global Conditions
.if-default-branch-refs: &if-default-branch-refs
  if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

.if-tag: &if-tag
  if: '$CI_COMMIT_TAG'

.if-tag-semver: &if-tag-semver
  if: '$CI_COMMIT_TAG =~ /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/'

.if-merge-request: &if-merge-request
  if: '$CI_MERGE_REQUEST_IID'

.if-schedule: &if-schedule
  if: '$CI_PIPELINE_SOURCE == "schedule"'

# Sync Conditions
.if-merge-request-labels-dont-interrupt: &if-merge-request-labels-dont-interrupt
  if: "$CI_MERGE_REQUEST_LABELS =~ /Pipeline::Sync::Don't Interrupt/"

# Review Conditions
.if-merge-request-labels-run-review-app: &if-merge-request-labels-run-review-app
  if: '$CI_MERGE_REQUEST_LABELS =~ /Pipeline::Review::Run Review App/'


##################
# RULES: CHANGES #
##################

.if-changes-made-to-dir: &if-changes-made-to-backend-dir
  rules:
    - if:
      changes:
        - backend/**/*
        - docker/**/*
        - Dockerfile
        - pyproject.toml
        - poetry.lock


include:
  - local: ra-data-models/.gitlab-ci.yml
  - project: labs/salt-automation
    file:
      - gitlab-ci-templates/common/no-interrupt-meta.v1.yml
      - gitlab-ci-templates/common/conventional-commits.v1.yml
      - gitlab-ci-templates/common/docker-build-meta.v2.yml
      - gitlab-ci-templates/common/docker-release.v1.yml
      - gitlab-ci-templates/common/config-updater-salt.v1.yml
      - gitlab-ci-templates/common/config-updater-flux.v1.yml
  - project: labs/salt-automation
    file: gitlab-ci-templates/common/pre-commit.v1.yml
    rules:
      - <<: *if-merge-request

# Workflow
###########
workflow:
  rules:
    - <<: *if-tag
      variables:
        # Override the IMAGE_SHA variable on tag pipelines to avoid both the default
        # branch pipeline and tag pipeline overriding each other's images arbitrarily when
        # they are both running at the same time on master.
        IMAGE_SHA: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
    - <<: *if-default-branch-refs
    - <<: *if-merge-request

default:
  # All jobs are interruptible by default
  interruptible: true

# Services
###########
.mo-variables:
  variables:
    PYTHONASYNCIODEBUG: "1"
    ENVIRONMENT: "testing"

    KEYCLOAK_SCHEMA: "http"
    KEYCLOAK_PORT: 8080
    KEYCLOAK_AUTH_SERVER_URL: "http://keycloak:8080/auth/"
    KEYCLOAK_VERIFY_AUDIENCE: "false"

    AMQP_ENABLE: "false"
    GRAPHQL_AUTH: "false"
    QUERY_EXPORT_DIR: "/tmp"

    MAX_WORKERS: "1"
    TESTING_API: "true"
    LORA_AUTH: "false"
    DB_HOST: mox-db
    DB_NAME: mox
    DB_USER: mox
    DB_PASSWORD: mox

.services:use-mo:
  # Remember to add `needs: [Build OS2mo]` if you overwrite `needs`.
  needs:
    - Build OS2mo
  image: $IMAGE_SHA
  extends:
    - .mo-variables

# Sync
#######
Do not interrupt:
  extends: .do-not-interrupt
  rules:
    - <<: *if-default-branch-refs
    - <<: *if-tag
    - <<: *if-schedule
    - <<: *if-merge-request-labels-dont-interrupt
    - when: manual
      allow_failure: true


# Lint
#######
.lint-base:
  stage: lint
  needs: [ ]
  # TODO: Individual lint rules for each file type using 'changes' patterns
  rules:
    - <<: *if-merge-request

Lint Dockerfiles:
  extends: .lint-base
  image: hadolint/hadolint:latest-alpine
  before_script:
    - apk add fd
  script:
    - echo "Running Hadolint, a Dockerfile linter"
    - echo "For more information about reported errors, visit the Hadolint wiki on https://github.com/hadolint/hadolint/wiki"
    # Run fd without exec arg to produce a list of files to be linted
    - fd Dockerfile
    # Run hadolint on every Dockerfile
    - fd Dockerfile --exec hadolint

Lint shell scripts:
  # TODO: Do this as part of pre-commit instead
  extends: .lint-base
  image: koalaman/shellcheck-alpine:latest
  before_script:
    - apk update
    - apk add git
  script:
    - git ls-files --exclude='*.sh' --ignored -c | xargs shellcheck


# Build
########
.build:test-image:
  rules:
    - <<: *if-merge-request

Build OS2mo:
  extends:
    - .build-docker
  variables:
    BUILD_DOCKER_EXTRA_FLAGS: --build-arg=COMMIT_SHA=${CI_COMMIT_SHA} --build-arg=COMMIT_TAG=${CI_COMMIT_TAG}
  rules:
    - <<: *if-schedule
      when: never
    - <<: *if-changes-made-to-backend-dir
    - when: on_success

Build Keycloak-realm:
  stage: build
  needs: [ ]
  extends: .build:test-image
  image:
    # TODO: Use new realm builder
    name: magentaaps/os2mo-keycloak-realm-builder:2.3.0
    entrypoint: [ "" ]
  variables:
    GIT_STRATEGY: none # We do not need the source code
    KEYCLOAK_VERSION: 14.0.0
    KEYCLOAK_SSL_REQUIRED: external # for MO
    KEYCLOAK_SSL_REQUIRED_MO: external # for realm builder
    KEYCLOAK_LORA_REALM_ENABLED: "true"
    KEYCLOAK_LORA_CLIENT_SECRET: 158a2075-aa8a-421c-94a4-2df35377014a
    KEYCLOAK_DIPEX_CLIENT_ENABLED: "true"
    KEYCLOAK_DIPEX_CLIENT_SECRET: "603f1c82-d012-4d04-9382-dbe659c533fb"
    KEYCLOAK_REALM_USERS: '[{"username": "bruce", "password": "bruce", "firstname": "Bruce", "lastname": "Lee", "email": "bruce@kung.fu", "enabled": true, "uuid": "99e7b256-7dfa-4ee8-95c6-e3abe82e236a"}]'
    KEYCLOAK_MO_CLIENT_REDIRECT_URI: '["*"]'
    KEYCLOAK_MO_CLIENT_WEB_ORIGIN: '["*"]'
  script:
    - export KEYCLOAK_REALM_JSON_PATH=$PWD/keycloak-realm.json
    - cd /app
    - python main.py
  artifacts:
    paths:
      - keycloak-realm.json
    expire_in: 1 day
  rules:
    - <<: *if-changes-made-to-backend-dir


Build Keycloak:
  extends:
    - .build:test-image
    - .build-docker
  needs:
    - Build Keycloak-realm
  variables:
    CI_IMAGE: ${KEYCLOAK_IMAGE_SHA}
    DOCKERFILE: ${CI_PROJECT_DIR}/docker/ci.keycloak.Dockerfile
  rules:
    - <<: *if-changes-made-to-backend-dir


# Tests
########
.test-base:
  stage: test
  variables:
    # $CI_JOB_ID is unique across parallel jobs, so this works as expected
    COVERAGE_FILE: $CI_PROJECT_DIR/.coverage.$CI_JOB_ID
  rules:
    - <<: *if-merge-request

# Backend Tests
################
Unit-test:
  image: python:3.10
  needs: [ ]
  extends:
    - .test-base
    - .mo-variables
  variables:
    HYPOTHESIS_PROFILE: "ci"

    PIP_CACHE_DIR: ${CI_PROJECT_DIR}/.cache/pip
  rules:
    - <<: *if-changes-made-to-backend-dir

  parallel: 2
  script:
    - pip install poetry==1.3.2
    - poetry config virtualenvs.in-project true
    - poetry install --with ci
    - poetry run pytest backend/tests/
      -p no:cacheprovider
      -m "not integration_test"
      --color=yes
      --show-capture=stdout
      --cov=mora
      --group=$CI_NODE_INDEX
      --splits=$CI_NODE_TOTAL
      --splitting-algorithm=least_duration
      --randomly-seed=$CI_PIPELINE_IID
  cache:
    paths:
      - ${PIP_CACHE_DIR}
      - ${CI_PROJECT_DIR}/.venv
  artifacts:
    when: always
    paths:
      - $COVERAGE_FILE

Integration-test:
  extends:
    - .test-base
    - .services:use-mo
  needs:
    - Build OS2mo
    - Build Keycloak
  variables:
    HYPOTHESIS_PROFILE: "ci"
    FF_NETWORK_PER_BUILD: 1  # activate container-to-container networking
  services:
    # mox db
    - name: magentaaps/postgres-os2mo:11-11.7-test
      alias: mox-db
      variables:
        DB_NAME: mox
        DB_USER: mox
        DB_PASSWORD: mox
    # Keycloak
    - name: $KEYCLOAK_IMAGE_SHA
      alias: keycloak
  parallel: 8
  script:
    - pytest backend/tests
      -m "integration_test"
      -p no:cacheprovider
      --color=yes
      --show-capture=stdout
      --cov=mora
      --cov=oio_rest
      --group=$CI_NODE_INDEX
      --splits=$CI_NODE_TOTAL
  artifacts:
    when: always
    paths:
      - $COVERAGE_FILE
  rules:
    - <<: *if-changes-made-to-backend-dir

Coverage:
  stage: coverage
  image: python:3.10
  needs:
    - Unit-test
    - Integration-test
  before_script:
    - pip install coverage
    - coverage combine
  script:
    - coverage report --fail-under=80 --skip-empty
  after_script:
    - coverage html -d $CI_PROJECT_DIR/coverage-html --skip-empty
    - coverage xml -o $CI_PROJECT_DIR/coverage.xml --skip-empty
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    when: always
    paths:
      - coverage-html
    reports:
      coverage_report:
        coverage_format: cobertura
        path: $CI_PROJECT_DIR/coverage.xml
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_MERGE_REQUEST_IID'
    - <<: *if-changes-made-to-backend-dir

# Review
#########
Deploy Review:
  stage: review
  needs:
    - Build OS2mo
  image: debian:bookworm
  variables:
    GIT_STRATEGY: none  # We do not need the source code
  before_script:
    - apt-get update && apt-get install -y curl jq
  script:
    - curl
      --silent
      --fail-with-body
      --request POST
      --user $CONFIG_UPDATER_REVIEW_APP_USERNAME:$CONFIG_UPDATER_REVIEW_APP_PASSWORD
      "$REVIEW_CONFIG_UPDATER_URL/deploy-mr?mr_id=$CI_MERGE_REQUEST_IID&commit_sha=$CI_COMMIT_SHA"
    - until $(curl --silent --fail-with-body "https://review-os2mo-mr${CI_MERGE_REQUEST_IID}.moraci.magentahosted.dk/version/" | jq ".mo_hash == \"$CI_COMMIT_SHA\""); do sleep 5; done
  environment:
    name: "review/review-os2mo-mr${CI_MERGE_REQUEST_IID}"
    url: "https://review-os2mo-mr${CI_MERGE_REQUEST_IID}.moraci.magentahosted.dk"
    on_stop: Stop Review
    auto_stop_in: 1 week
  tags:
    - deploy
  rules:
    - <<: *if-schedule
      when: never
    - <<: *if-changes-made-to-backend-dir
    - <<: *if-merge-request-labels-run-review-app
    - <<: *if-merge-request
      when: manual
      allow_failure: true

Stop Review:
  stage: review
  needs: [ ]
  image: curlimages/curl:7.81.0
  variables:
    GIT_STRATEGY: none  # We do not need the source code
  script:
    - curl
      --silent
      --fail-with-body
      --request POST
      --user $CONFIG_UPDATER_REVIEW_APP_USERNAME:$CONFIG_UPDATER_REVIEW_APP_PASSWORD
      "$REVIEW_CONFIG_UPDATER_URL/undeploy-mr?mr_id=$CI_MERGE_REQUEST_IID"
  environment:
    name: "review/review-os2mo-mr${CI_MERGE_REQUEST_IID}"
    action: stop
  tags:
    - deploy
  rules:
    - <<: *if-merge-request
      when: manual
      allow_failure: true


# Docs
#######

.docs:rules:deploy-master-docs:
  rules:
    - <<: *if-schedule
      when: never
    - <<: *if-tag-semver
      when: never
    - <<: *if-default-branch-refs

.docs:rules:build-docs:
  rules:
    - <<: *if-merge-request
    - !reference [ ".docs:rules:deploy-master-docs", rules ]

Export GQL Schema:
  stage: docs
  extends:
    - .docs:rules:build-docs
    - .services:use-mo
  variables:
    OUT: $CI_PROJECT_DIR/docs/src/graphql/voyager.html
    QUERY_EXPORT_DIR: "/tmp"
  script:
    - python docs/schema_to_voyager.py
  artifacts:
    paths:
      - $OUT

Export Changelog:
  stage: docs
  extends:
    - .docs:rules:build-docs
  needs: [ ]
  image: python:3
  variables:
    OUT: $CI_PROJECT_DIR/docs/.dynamic_changelog.md
    GIT_STRATEGY: clone
    GIT_DEPTH: 0
  before_script:
    - pip3 install Commitizen
  script:
    - cz changelog --dry-run >> $OUT
  artifacts:
    paths:
      - $OUT

.build-docs:
  stage: docs
  extends:
    - .docs:rules:build-docs
  needs:
    - Export GQL Schema
    - Export Changelog
  image: python:3.10
  variables:
    POETRY_VERSION: 1.3.2
    POETRY_VIRTUALENVS_CREATE: "false"
  before_script:
    - pip3 install poetry==${POETRY_VERSION}
    - cd docs && poetry install --no-interaction
  script:
    - cat .dynamic_changelog.md .static_changelog.md >> src/changelog.md
    - mkdocs build --strict --site-dir=$CI_PROJECT_DIR/site
  artifacts:
    paths:
      - $CI_PROJECT_DIR/site
    expire_in: 1 week

Build and deploy branch docs:
  extends:
    - .build-docs
  environment:
    name: docs/$CI_COMMIT_REF_SLUG
    url: $CI_JOB_URL/artifacts/file/site/index.html
    auto_stop_in: 1 week
  rules:
    - <<: *if-merge-request

Build master docs:
  extends:
    - .build-docs
    - .docs:rules:deploy-master-docs

# To release to GitLab Pages, the job must be called 'pages'
pages:
  stage: docs
  extends:
    - .docs:rules:deploy-master-docs
  needs:
    - Build master docs
  image: alpine:latest
  script:
    - cp -r $CI_PROJECT_DIR/site public
  artifacts:
    paths:
      - public/
