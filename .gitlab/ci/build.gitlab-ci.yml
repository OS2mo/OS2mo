# SPDX-FileCopyrightText: 2022 Magenta ApS
# SPDX-License-Identifier: MPL-2.0

include:
  - local: .gitlab/ci/rules.gitlab-ci.yml

variables:
  # We use kaniko v0.13.0 as newer versions contain fatal bugs
  KANIKO_VERSION: v1.3.0-debug


.build-base:
  stage: build
  needs: []
  image:
    name: gcr.io/kaniko-project/executor:${KANIKO_VERSION}
    entrypoint: [""]

.build:release-image:
  extends:
    - .build-base
    - .build:rules:build-release-image

.build:test-image:
  extends:
    - .build-base
    - .build:rules:build-test-image

Build OS2MO:
  extends: .build:release-image
  # TODO: Use gitlab-ci-templates/common/docker-build-meta.v1.yml instead. Migration requires support for COMMIT_SHA and
  # COMMIT_TAG, see https://git.magenta.dk/rammearkitektur/os2mo-triggers/os2mo-amqp-trigger-calculate-primary/-/blob/master/Dockerfile
  # for alternatives to --build-arg.
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --cache
      --context=$CI_PROJECT_DIR
      --dockerfile=$CI_PROJECT_DIR/docker/api.Dockerfile
      --destination=${IMAGE_SHA}
      --build-arg=COMMIT_SHA=${CI_COMMIT_SHA}
      --build-arg=COMMIT_TAG=${CI_COMMIT_TAG}

Build frontend:
  extends: .build:release-image
  # TODO: Use gitlab-ci-templates/common/docker-build-meta.v1.yml instead
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --cache
      --context=$CI_PROJECT_DIR
      --dockerfile=$CI_PROJECT_DIR/docker/frontend.Dockerfile
      --destination=${FRONTEND_IMAGE_SHA}
      --build-arg=COMMIT_SHA=${CI_COMMIT_SHA}
      --build-arg=COMMIT_TAG=${CI_COMMIT_TAG}

Build test frontend:
  extends: .build:test-image
  # TODO: Use gitlab-ci-templates/common/docker-build-meta.v1.yml instead
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --cache
      --context=$CI_PROJECT_DIR
      --dockerfile=$CI_PROJECT_DIR/docker/frontend.Dockerfile
      --destination=${FRONTEND_TEST_IMAGE_SHA}
      --build-arg=COMMIT_SHA=${CI_COMMIT_SHA}
      --build-arg=COMMIT_TAG=${CI_COMMIT_TAG}
      --target frontend

Build Tempotest:
  extends: .build:test-image
  # TODO: Use gitlab-ci-templates/common/docker-build-meta.v1.yml instead
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --cache
      --context=$CI_PROJECT_DIR/tempotest
      --dockerfile=$CI_PROJECT_DIR/tempotest/Dockerfile
      --destination=$TEMPOTEST_IMAGE_SHA

Build Keycloak-realm:
  extends: .build:test-image
  image:
    # TODO: Use new realm builder
    name: magentaaps/os2mo-keycloak-realm-builder:2.3.0
    entrypoint: [""]
  variables:
    GIT_STRATEGY: none # We do not need the source code
    KEYCLOAK_VERSION: 14.0.0
    KEYCLOAK_SSL_REQUIRED: external # for MO
    KEYCLOAK_SSL_REQUIRED_MO: external # for realm builder
    KEYCLOAK_LORA_REALM_ENABLED: "true"
    KEYCLOAK_LORA_CLIENT_SECRET: 158a2075-aa8a-421c-94a4-2df35377014a
    KEYCLOAK_DIPEX_CLIENT_ENABLED: "true"
    KEYCLOAK_DIPEX_CLIENT_SECRET: "603f1c82-d012-4d04-9382-dbe659c533fb"
    KEYCLOAK_REALM_USERS: '[{"username": "bruce", "password": "bruce", "firstname": "Bruce", "lastname": "Lee", "email": "bruce@kung.fu", "enabled": true, "uuid": "99e7b256-7dfa-4ee8-95c6-e3abe82e236a"}]'
    KEYCLOAK_MO_CLIENT_REDIRECT_URI: '["*"]'
    KEYCLOAK_MO_CLIENT_WEB_ORIGIN: '["*"]'
  script:
    - export KEYCLOAK_REALM_JSON_PATH=$PWD/keycloak-realm.json
    - cd /app
    - python main.py
  artifacts:
    paths:
      - keycloak-realm.json
    expire_in: 1 day

Build Keycloak:
  extends: .build:test-image
  needs:
    - Build Keycloak-realm
  # TODO: Use gitlab-ci-templates/common/docker-build-meta.v1.yml instead
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --cache
      --context=$CI_PROJECT_DIR
      --dockerfile=$CI_PROJECT_DIR/docker/ci.keycloak.Dockerfile
      --destination=${KEYCLOAK_IMAGE_SHA}

Build Keycloak DB:
  extends: .build:test-image
  # TODO: Use gitlab-ci-templates/common/docker-build-meta.v1.yml instead
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --cache
      --context=$CI_PROJECT_DIR
      --dockerfile=$CI_PROJECT_DIR/docker/ci.keycloak-db.Dockerfile
      --destination=${KEYCLOAK_DB_IMAGE_SHA}
