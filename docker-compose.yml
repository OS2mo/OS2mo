version: '3'

services:

  mo:
    build:
      context: .
      dockerfile: docker/Dockerfile
    # The `volumes` and `command` mounts the backend directory in the docker
    # container and overwrites the CMD from Dockerfile. With this gunicorn
    # reloads on file changes. This is very useful when developing the backend.
    # We also change the Flask app to one where a testing API for testcafe
    # e2e-tests is enabled.
    volumes:
      - ./backend:/code/backend
      - ./dev-environment/mo-dev-settings.toml:/user-settings.toml
      - ./.pytest_cache:/code/.pytest_cache
    command: ["gunicorn", "--reload", "-b", "0.0.0.0:5000", "tests.util:create_app()"]
    ports:
      - "5000:5000"
    depends_on:
      - mox
      - msg_broker

  mox:
    image: magentalabs/mox:dev-latest
    # build:
    #   context: ../mox
    #   dockerfile: docker/Dockerfile
    volumes:
      - ./dev-environment/mox-dev-settings.toml:/user-settings.toml
    command: [
    "gunicorn",
    "--config", "docker/gunicorn-settings.py",
    "--workers", "1", # We run single-threaded as the testing_api is not
                      # threadsafe.
    "oio_rest:app"]
    ports:
      - "8080:8080"
    depends_on:
      - mox-db

  mox-db:
    image: magentaaps/postgres-os2mo:9.6.15-2-test
    env_file:
      - dev-environment/db.env
      - dev-environment/sessions_db.env
      - dev-environment/conf_db.env
    # The following will mount the database data directory to RAM. It
    # significantly speeds up the database at the cost of dataloss on shutdown.
    # This is useful for running tests, but should never be used if you want to
    # save the data.
    # tmpfs:
    #   - /var/lib/postgresql/data

  msg_broker:
    # Normally, we expect the `rabbitmq` image. The -management images come
    # with a set of management plugins installed and enabled by default. They
    # can be accessed through the web interface on port 15672. The credentials
    # are guest/guest.
    image: rabbitmq:3-management
    # RabbitMQ stores data based on what it calls the "Node Name", which
    # defaults to the hostname. We set this, so we can keep track of our data.
    hostname: msg_broker
    # We expose the ports here, so decoupled agents can be developed with more
    # ease.
    ports:
      - "5672:5672"    # amqp port
      - "15672:15672"  # management port

  testcafe:
    image: magentalabs/testcafe:latest
    volumes:
      - ./frontend/e2e-tests:/tests
      - ./testcafe-artifacts:/artifacts
    environment:
      - BASE_URL=http://mo:5000
