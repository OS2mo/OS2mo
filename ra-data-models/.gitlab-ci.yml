# Conditions
#############
# Global Conditions
.if-default-branch-refs: &if-default-branch-refs
  if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

.if-tag-semver: &if-tag-semver
  if: '$CI_COMMIT_TAG =~ /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/'

.if-merge-request: &if-merge-request
  if: '$CI_MERGE_REQUEST_IID'


##################
# RULES: CHANGES #
##################
# Add or modify these to only trigger a job that has commits pushed to them.
# Example: if a commit has been pushed to /docs/mkdocs.yml, and the paths/files
# listed below are not affected by these changes, the "Test ramodels" (among others)
# job will NOT be triggered in pipeline.
.if-changes-made-to-ra-models: &if-changes-made-to-ra-models
  changes:
    - ra-data-models/**/*
    - .gitlab-ci.yml

# Reusables
################################################################################
variables:
  POETRY_VERSION: "1.1.11"
  POETRY_VIRTUALENVS_CREATE: "true"
  POETRY_VIRTUALENVS_IN_PROJECT: "true"

.install-deps: &install-deps
  needs: []
  before_script:
    - cd ra-data-models
    - cp -r ../backend/ramodels ramodels
    - pip install --no-cache-dir poetry==${POETRY_VERSION}
    - poetry install
  artifacts:
    when: always
    expire_in: 1 day
    paths:
      - ra-data-models/.venv/

.source-venv: &source-venv
  image: python:3
  needs: [Install ramodels]
  before_script:
    - cd ra-data-models
    - cp -r ../backend/ramodels ramodels
    - source .venv/bin/activate

# Jobs
################################################################################


Install ramodels:
  <<: *install-deps
  image: python:3
  stage: build
  script:
    - poetry --version
  rules:
    - <<: *if-default-branch-refs
    - <<: *if-merge-request

Test ramodels:
  <<: *source-venv
  stage: test
  variables:
    HYPOTHESIS_PROFILE: ci
  parallel: 4
  script:
    - pytest
      --cov=ramodels
      --cov-report=html
      --group ${CI_NODE_INDEX}
      --splits ${CI_NODE_TOTAL}
    - mv .coverage "${CI_PROJECT_DIR}/.coverage.${CI_JOB_ID}"
  artifacts:
    when: always
    paths:
      - ".coverage.$CI_JOB_ID"
  rules:
    - <<: *if-merge-request
    - <<: *if-changes-made-to-ra-models
    - changes:
        - ra-data-models/docs/*
      when: never

Check coverage ramodels:
  stage: coverage
  image: python:3
  needs: [Test ramodels]
  before_script:
    - cd ra-data-models
    - cp -r ../backend/ramodels ramodels
    - pip install coverage
    - cd ..
    - coverage combine
  script:
    - coverage report -m --fail-under=80
  rules:
    - <<: *if-merge-request
    - <<: *if-changes-made-to-ra-models
    - changes:
        - ra-data-models/docs/*
      when: never


Release to PyPI:
  <<: *install-deps
  stage: release
  image: python:3
  script:
    - sed -i "s/^version = .*$/version = \"${CI_COMMIT_TAG}\"/g" pyproject.toml
    - poetry publish --build -u __token__ -p $PYPI_TOKEN
  rules:
    - <<: *if-tag-semver

ramodel pages:
  <<: *source-venv
  stage: release
  script:
    - python docs/generate_schemas.py
    - mkdocs build --site-dir public
  artifacts:
    paths:
      - public
  rules:
    - <<: *if-default-branch-refs
